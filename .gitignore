# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Poetry
poetry.lock

# VS Code
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.Spotlight-V100
.Trashes
.fseventsd
.TemporaryItems
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Docker
.dockerignore
docker-compose.override.yml

# Kubernetes
*.kubeconfig

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node_modules (if using Node.js tools)
node_modules/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Redis dump file
dump.rdb

# Database files
*.db
*.sqlite
*.sqlite3

# Backup files
*.bak
*.backup
*.old

# Archive files
*.zip
*.tar.gz
*.rar
*.7z

# Project-specific ignores

# Model files and embeddings (can be large)
models/
embeddings/
*.pkl
*.joblib
*.model
*.bin

# Data directories
data/
datasets/
raw_data/
processed_data/
repositories/
cloned_repos/

# Configuration files with secrets
config/secrets.yaml
config/local.yaml
.secrets
secrets.env

# Jupyter notebooks checkpoints
*.ipynb_checkpoints/

# ML experiment tracking
mlruns/
.mlflow/
wandb/
tensorboard_logs/

# Vector database files
vector_db/
chroma_db/
weaviate_data/

# Neo4j database files
neo4j_data/
graph.db/

# Temporary analysis files
analysis_temp/
temp_analysis/
*.tmp

# Large files that shouldn't be committed
*.large
*.huge

# Local development overrides
docker-compose.local.yml
local_settings.py
settings_local.py

# IDE-specific files
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
.idea/

# OS-specific files
.DS_Store
Thumbs.db

# Documentation build outputs
docs/build/
docs/_build/
docs/site/

# Test artifacts
test_reports/
test_results/
allure-results/
allure-report/

# Profiling data
*.prof
*.profile

# Memory dumps
*.hprof
*.heap

# API documentation
api_docs/build/

# Temporary directories for processing
processing_temp/
temp_processing/

# Cache directories
.cache/
__cache__/

# Local environment configuration
.env.local
.env.development
.env.test
.env.production

# Monitoring and logging
monitoring/
grafana/data/
prometheus/data/

# Backup directories
backups/
*.backup

# Generated files
generated/
auto_generated/

# Dependency directories
site-packages/
pip-cache/

# Build artifacts
build/
dist/
*.egg-info/

# Wheel files
*.whl

# Local scripts
local_scripts/
scripts/local/

# Temporary notebooks
notebooks/temp/
notebooks/scratch/

# Database migrations (if using Alembic, keep only the versions, not the instance)
alembic/versions/*.pyc

# Local testing
local_test/
test_local/

# Performance test results
performance_results/
load_test_results/

# Security scan results
security_reports/
vulnerability_reports/

# Local development tools
dev_tools/
development/local/

# Temporary exports
exports/
temp_exports/

# Local configuration overrides
local_config/
config/local/
settings/local/

# IDE workspace files
*.code-workspace
.vscode/

# JetBrains IDEs
.idea/
*.iml

# Local database files
*.db-journal
*.db-wal
*.db-shm

# Compiled Python files
*.pyc
*.pyo
*.pyd

# Python cache
__pycache__/
.Python

# Virtual environments
venv*/
env*/
ENV*/

# Package files
*.egg
*.egg-info/
dist/
build/

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/

# Documentation
docs/_build/

# Logs
*.log
logs/

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Editor files
*~
*.swp
*.swo
.vscode/
.idea/

# OS files
.DS_Store
Thumbs.db

# Environment files
.env*
!.env.example

# Local overrides
local_*
*_local

# Claude AI specific files
.claude/poetry.toml
